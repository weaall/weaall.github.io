3:I[5613,[],""]
5:I[1778,[],""]
6:I[7709,["229","static/chunks/229-547ffddabf4aab4b.js","250","static/chunks/250-e3db70cd67721be2.js","185","static/chunks/app/layout-4569b6707a848707.js"],""]
7:I[8667,["160","static/chunks/app/not-found-28d903cad857ed6b.js"],""]
4:["slug","java-stack-queue","d"]
0:["at3mqDdezYEyZ-KhFLxh9",[[["",{"children":["(pages)",{"children":["prac",{"children":[["slug","java-stack-queue","d"],{"children":["__PAGE__?{\"slug\":\"java-stack-queue\"}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":["(pages)",{"children":["prac",{"children":[["slug","java-stack-queue","d"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(pages)","children","prac","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/7f6bd37aab40623f.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(pages)","children","prac","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(pages)","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","html",null,{"lang":"kr","children":[["$","head",null,{"children":[["$","meta",null,{"name":"naver-site-verification","content":"e782934088f4524e1d46947402328d9864f04318"}],["$","meta",null,{"name":"google-site-verification","content":"EB5qLPhkvA7mD6Yz6VpiZaMErWP4KIB7Aj_rR-xqdsA"}]]}],["$","body",null,{"className":"__className_e662c1","children":["$","div",null,{"children":[["$","div",null,{"children":[["$","$L6",null,{}],["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":["$","$L7",null,{}],"notFoundStyles":[],"styles":null}]],"style":{},"className":"mx-auto max-w-[1080px] h-auto px-1"}],["$","div",null,{"children":["$","div",null,{"children":[["$","div",null,{"children":[["$","p",null,{"children":"Dong-Hyun Wi","style":{},"className":"font-bold text-2xl"}],["$","p",null,{"children":"weaall@naver.com","style":{},"className":"text-sm"}],["$","p",null,{"children":"weaall88@gmail.com","style":{},"className":"text-sm"}]],"style":{},"className":"flex flex-col m-auto text-center space-y-1 w-[33%]"}],["$","div",null,{"children":["$","img",null,{"alt":"","src":"../../assets/svg/user_icon.svg","style":{},"className":"w-8 h-full m-auto group-hover:scale-110"}],"style":{},"className":"flex flex-col m-auto text-center space-y-1 w-[33%]"}],["$","div",null,{"children":[["$","a",null,{"href":"/","children":"Main","style":{},"className":"font-bold text-base"}],["$","a",null,{"href":"/shallow","children":"Shallow","style":{},"className":"font-bold text-base"}],["$","a",null,{"href":"/deep","children":"Deep","style":{},"className":"font-bold text-base"}],["$","a",null,{"href":"/","children":"Me","style":{},"className":"font-bold text-base"}]],"style":{},"className":"flex m-auto space-x-4 w-[33%] justify-center"}]],"style":{},"className":"mx-auto max-w-[1080px] h-40 justify-between flex mobile:flex-col mobile:h-52"}],"style":{},"className":"w-full border-t mt-20 text-t-main"}]],"style":{},"className":"mx-auto text-main max-w-[1080px]"}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/92f2fa493c2ab7ac.css","precedence":"next","crossOrigin":""}],["$","link","1",{"rel":"stylesheet","href":"/_next/static/css/bc0b5054220f7bba.css","precedence":"next","crossOrigin":""}]],"$L8"]]]]
9:Tc79,<span class="hljs-keyword">import</span> java.util.*;

<span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">solution</span><span class="hljs-params">(<span class="hljs-type">int</span>[] priorities, <span class="hljs-type">int</span> location)</span> {
        <span class="hljs-type">int</span> <span class="hljs-variable">answer</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; <span class="hljs-comment">// 인쇄된 문서 수를 저장할 변수</span>
        <span class="hljs-type">int</span> <span class="hljs-variable">l</span> <span class="hljs-operator">=</span> location; <span class="hljs-comment">// 관심 있는 문서의 현재 위치</span>

        <span class="hljs-comment">// 큐 초기화</span>
        Queue&lt;Integer&gt; que = <span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedList</span>&lt;&gt;();
        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i : priorities){
            que.add(i);
        }

        <span class="hljs-comment">// 우선순위 배열을 정렬하여 높은 순서대로 정렬</span>
        Arrays.sort(priorities);
        <span class="hljs-type">int</span> <span class="hljs-variable">size</span> <span class="hljs-operator">=</span> priorities.length - <span class="hljs-number">1</span>; <span class="hljs-comment">// 가장 높은 우선순위의 인덱스</span>

        <span class="hljs-comment">// 큐가 빌 때까지 반복</span>
        <span class="hljs-keyword">while</span>(!que.isEmpty()){
            <span class="hljs-type">Integer</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> que.poll(); <span class="hljs-comment">// 큐의 첫 번째 요소를 꺼냄</span>
            <span class="hljs-keyword">if</span>(i == priorities[size - answer]){ <span class="hljs-comment">// 현재 우선순위가 가장 높은 문서와 비교</span>
                answer++; <span class="hljs-comment">// 인쇄된 문서 수 증가</span>
                l--; <span class="hljs-comment">// 관심 있는 문서의 위치 감소</span>
                <span class="hljs-keyword">if</span>(l &lt; <span class="hljs-number">0</span>)
                    <span class="hljs-keyword">break</span>; <span class="hljs-comment">// 관심 있는 문서가 인쇄된 경우 루프 종료</span>
            } <span class="hljs-keyword">else</span> {
                que.add(i); <span class="hljs-comment">// 문서를 큐의 뒤로 다시 추가</span>
                l--; <span class="hljs-comment">// 관심 있는 문서의 위치 감소</span>
                <span class="hljs-keyword">if</span>(l &lt; <span class="hljs-number">0</span>)
                    l = que.size() - <span class="hljs-number">1</span>; <span class="hljs-comment">// 문서가 큐의 끝으로 이동</span>
            }
        }

        <span class="hljs-keyword">return</span> answer; <span class="hljs-comment">// 결과 반환</span>
    }
}

a:Ta1e,<span class="hljs-keyword">import</span> java.util.*;

<span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span>[] solution(<span class="hljs-type">int</span>[] prices) {
        <span class="hljs-type">int</span> <span class="hljs-variable">n</span> <span class="hljs-operator">=</span> prices.length;  <span class="hljs-comment">// 주식 가격 배열의 길이</span>
        <span class="hljs-type">int</span>[] answer = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[n];  <span class="hljs-comment">// 결과를 저장할 배열</span>
        Stack&lt;Integer&gt; stack = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Stack</span>&lt;&gt;();  <span class="hljs-comment">// 인덱스를 저장할 스택</span>

        <span class="hljs-comment">// 주식 가격 배열을 순회</span>
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; n; i++) {
            <span class="hljs-comment">// 현재 가격이 스택에 저장된 가격보다 낮아지는 시점을 찾기</span>
            <span class="hljs-keyword">while</span> (!stack.isEmpty() &amp;&amp; prices[stack.peek()] &gt; prices[i]) {
                <span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> stack.pop();  <span class="hljs-comment">// 스택에서 인덱스를 꺼냄</span>
                answer[j] = i - j;  <span class="hljs-comment">// 가격이 떨어진 시점까지의 기간 계산</span>
            }
            stack.push(i);  <span class="hljs-comment">// 현재 인덱스를 스택에 추가</span>
        }

        <span class="hljs-comment">// 순회가 끝난 후에도 스택에 남아있는 인덱스 처리</span>
        <span class="hljs-keyword">while</span> (!stack.isEmpty()) {
            <span class="hljs-type">int</span> <span class="hljs-variable">j</span> <span class="hljs-operator">=</span> stack.pop();  <span class="hljs-comment">// 스택에서 인덱스를 꺼냄</span>
            answer[j] = n - <span class="hljs-number">1</span> - j;  <span class="hljs-comment">// 끝까지 가격이 떨어지지 않은 기간 계산</span>
        }

        <span class="hljs-keyword">return</span> answer;  <span class="hljs-comment">// 결과 배열 반환</span>
    }
}

b:T8a1,<span class="hljs-keyword">import</span> java.util.*;

<span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">solution</span><span class="hljs-params">(<span class="hljs-type">int</span>[] scoville, <span class="hljs-type">int</span> K)</span> {
        <span class="hljs-type">int</span> <span class="hljs-variable">answer</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;
        
        PriorityQueue&lt;Integer&gt; minHeap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">PriorityQueue</span>&lt;&gt;();
        
        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> s : scoville){
            minHeap.add(s);
        }
        
       <span class="hljs-keyword">while</span>(minHeap.size() &gt; <span class="hljs-number">1</span> &amp;&amp; minHeap.peek() &lt; K) {
            <span class="hljs-type">int</span> <span class="hljs-variable">firstMin</span> <span class="hljs-operator">=</span> minHeap.poll(); <span class="hljs-comment">// 가장 작은 요소 꺼내기</span>
            <span class="hljs-type">int</span> <span class="hljs-variable">secondMin</span> <span class="hljs-operator">=</span> minHeap.poll(); <span class="hljs-comment">// 두 번째로 작은 요소 꺼내기</span>
            
            <span class="hljs-type">int</span> <span class="hljs-variable">newScoville</span> <span class="hljs-operator">=</span> firstMin + (secondMin * <span class="hljs-number">2</span>); <span class="hljs-comment">// 새로운 스코빌 지수 계산</span>
            minHeap.add(newScoville); <span class="hljs-comment">// 계산된 새로운 스코빌 지수를 힙에 추가</span>
            answer++; <span class="hljs-comment">// 섞은 횟수 증가</span>
        }
        
        <span class="hljs-keyword">if</span>(minHeap.peek() &lt; K) {
            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;
        }
        
        <span class="hljs-keyword">return</span> answer;
    }
}
c:T8a1,<span class="hljs-keyword">import</span> java.util.*;

<span class="hljs-keyword">class</span> <span class="hljs-title class_">Solution</span> {
    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">solution</span><span class="hljs-params">(<span class="hljs-type">int</span>[] scoville, <span class="hljs-type">int</span> K)</span> {
        <span class="hljs-type">int</span> <span class="hljs-variable">answer</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;
        
        PriorityQueue&lt;Integer&gt; minHeap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">PriorityQueue</span>&lt;&gt;();
        
        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> s : scoville){
            minHeap.add(s);
        }
        
       <span class="hljs-keyword">while</span>(minHeap.size() &gt; <span class="hljs-number">1</span> &amp;&amp; minHeap.peek() &lt; K) {
            <span class="hljs-type">int</span> <span class="hljs-variable">firstMin</span> <span class="hljs-operator">=</span> minHeap.poll(); <span class="hljs-comment">// 가장 작은 요소 꺼내기</span>
            <span class="hljs-type">int</span> <span class="hljs-variable">secondMin</span> <span class="hljs-operator">=</span> minHeap.poll(); <span class="hljs-comment">// 두 번째로 작은 요소 꺼내기</span>
            
            <span class="hljs-type">int</span> <span class="hljs-variable">newScoville</span> <span class="hljs-operator">=</span> firstMin + (secondMin * <span class="hljs-number">2</span>); <span class="hljs-comment">// 새로운 스코빌 지수 계산</span>
            minHeap.add(newScoville); <span class="hljs-comment">// 계산된 새로운 스코빌 지수를 힙에 추가</span>
            answer++; <span class="hljs-comment">// 섞은 횟수 증가</span>
        }
        
        <span class="hljs-keyword">if</span>(minHeap.peek() &lt; K) {
            <span class="hljs-keyword">return</span> -<span class="hljs-number">1</span>;
        }
        
        <span class="hljs-keyword">return</span> answer;
    }
}
2:[["$","div",null,{"children":[["$","div",null,{"children":["$","img",null,{"style":{},"className":""}],"style":{},"className":"w-full bg-main h-96 rounded-lg"}],["$","div",null,{"children":[["$","h1",null,{"children":"Java) Stack, Queue, Heap 활용하기","style":{},"className":"text-2xl text-main font-bold after:content-['.'] after:text-red-500"}],["$","p",null,{"children":"Stack, Queue, Heap","style":{},"className":"text-base"}],["$","div",null,{"children":[["$","img",null,{"alt":"","src":"../../assets/svg/calendar_icon.svg","style":{},"className":"w-4 mr-3"}],["$","p",null,{"children":"2024.01.01","style":{},"className":"text-sm text-main mr-10"}],["$","img",null,{"alt":"","src":"../../assets/svg/book_icon.svg","style":{},"className":"w-4 mr-3"}],["$","p",null,{"children":[2,"mins"],"style":{},"className":"text-sm text-main mr-10"}]],"style":{},"className":"flex h-auto"}],["$","div",null,{"children":[["$","div",null,{"children":"java","style":{},"className":"mt-2 text-xs bg-t-main px-2 py-1 rounded-lg cursor-pointer"}],["$","div",null,{"children":"Stack","style":{},"className":"mt-2 text-xs bg-t-main px-2 py-1 rounded-lg cursor-pointer"}],["$","div",null,{"children":"Queue","style":{},"className":"mt-2 text-xs bg-t-main px-2 py-1 rounded-lg cursor-pointer"}],["$","div",null,{"children":"Heap","style":{},"className":"mt-2 text-xs bg-t-main px-2 py-1 rounded-lg cursor-pointer"}],["$","div",null,{"children":"LinkedList","style":{},"className":"mt-2 text-xs bg-t-main px-2 py-1 rounded-lg cursor-pointer"}]],"style":{},"className":"flex space-x-3 h-auto"}]],"style":{},"className":"py-8 space-y-3 border-b-2"}]],"style":{},"className":"pb-20"}],[["$","h2",null,{"children":["$","a",null,{"href":"#Queue 활용","children":"Queue 활용"}],"style":{},"className":"text-xl font-bold mt-0 mb-9 after:content-['.'] after:text-red-500 cursor-pointer"}],"\n",["$","pre",null,{"children":["$","div",null,{"children":[["$","div",null,{"children":[["$","p",null,{"children":"java","style":{},"className":"text-xl font-bold after:content-['.'] after:text-red-500"}]," "],"style":{},"className":"absolute right-4 top-0 text-main rounded-2xl py-2 px-4 bg-white w-fit mr-4"}],["$","div",null,{"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$9"},"style":{},"className":"whitespace-pre-wrap rounded-xl text-t-main my-6 text-sm"}],"style":{},"className":"bg-main p-6 pt-6 rounded-xl"}]],"style":{},"className":"relative rounded-xl text-base pt-6 mb-10"}],"style":{},"className":"text-t-main text-base"}],"\n",["$","hr",null,{"children":"$undefined","style":{},"className":"my-20 w-full h-[2px] bg-t-main"}],"\n",["$","h2",null,{"children":["$","a",null,{"href":"#Stack 활용","children":"Stack 활용"}],"style":{},"className":"text-xl font-bold mt-0 mb-9 after:content-['.'] after:text-red-500 cursor-pointer"}],"\n",["$","pre",null,{"children":["$","div",null,{"children":[["$","div",null,{"children":[["$","p",null,{"children":"java","style":{},"className":"text-xl font-bold after:content-['.'] after:text-red-500"}]," "],"style":{},"className":"absolute right-4 top-0 text-main rounded-2xl py-2 px-4 bg-white w-fit mr-4"}],["$","div",null,{"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$a"},"style":{},"className":"whitespace-pre-wrap rounded-xl text-t-main my-6 text-sm"}],"style":{},"className":"bg-main p-6 pt-6 rounded-xl"}]],"style":{},"className":"relative rounded-xl text-base pt-6 mb-10"}],"style":{},"className":"text-t-main text-base"}],"\n",["$","hr",null,{"children":"$undefined","style":{},"className":"my-20 w-full h-[2px] bg-t-main"}],"\n",["$","h2",null,{"children":["$","a",null,{"href":"#PriorityQueue 활용","children":"PriorityQueue 활용"}],"style":{},"className":"text-xl font-bold mt-0 mb-9 after:content-['.'] after:text-red-500 cursor-pointer"}],"\n",["$","pre",null,{"children":["$","div",null,{"children":[["$","div",null,{"children":[["$","p",null,{"children":"java","style":{},"className":"text-xl font-bold after:content-['.'] after:text-red-500"}]," "],"style":{},"className":"absolute right-4 top-0 text-main rounded-2xl py-2 px-4 bg-white w-fit mr-4"}],["$","div",null,{"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$b"},"style":{},"className":"whitespace-pre-wrap rounded-xl text-t-main my-6 text-sm"}],"style":{},"className":"bg-main p-6 pt-6 rounded-xl"}]],"style":{},"className":"relative rounded-xl text-base pt-6 mb-10"}],"style":{},"className":"text-t-main text-base"}],"\n",["$","hr",null,{"children":"$undefined","style":{},"className":"my-20 w-full h-[2px] bg-t-main"}],"\n",["$","h2",null,{"children":["$","a",null,{"href":"#PriorityQueue +","children":"PriorityQueue +"}],"style":{},"className":"text-xl font-bold mt-0 mb-9 after:content-['.'] after:text-red-500 cursor-pointer"}],"\n",["$","pre",null,{"children":["$","div",null,{"children":[["$","div",null,{"children":[["$","p",null,{"children":"java","style":{},"className":"text-xl font-bold after:content-['.'] after:text-red-500"}]," "],"style":{},"className":"absolute right-4 top-0 text-main rounded-2xl py-2 px-4 bg-white w-fit mr-4"}],["$","div",null,{"children":["$","code",null,{"dangerouslySetInnerHTML":{"__html":"$c"},"style":{},"className":"whitespace-pre-wrap rounded-xl text-t-main my-6 text-sm"}],"style":{},"className":"bg-main p-6 pt-6 rounded-xl"}]],"style":{},"className":"relative rounded-xl text-base pt-6 mb-10"}],"style":{},"className":"text-t-main text-base"}],"\n",["$","hr",null,{"children":"$undefined","style":{},"className":"my-20 w-full h-[2px] bg-t-main"}]]]
8:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Java) Stack, Queue, Heap 활용하기"}],["$","meta","3",{"name":"description","content":"Stack, Queue, Heap"}],["$","meta","4",{"name":"keywords","content":"java,Stack,Queue,Heap,LinkedList"}],["$","link","5",{"rel":"canonical","href":"http://weaall.github.io/java-stack-queue"}],["$","meta","6",{"property":"og:title","content":"Java) Stack, Queue, Heap 활용하기"}],["$","meta","7",{"property":"og:description","content":"Stack, Queue, Heap"}],["$","meta","8",{"property":"og:url","content":"http://weaall.github.io/java-stack-queue"}],["$","meta","9",{"property":"og:site_name","content":"Weaall's Dive"}],["$","meta","10",{"property":"og:type","content":"article"}],["$","meta","11",{"property":"article:published_time","content":"2023-12-31T15:00:00.000Z"}],["$","meta","12",{"property":"article:modified_time","content":"2023-12-31T15:00:00.000Z"}],["$","meta","13",{"property":"article:author","content":"https://github.com/weaall"}],["$","meta","14",{"property":"article:tag","content":"java"}],["$","meta","15",{"property":"article:tag","content":"Stack"}],["$","meta","16",{"property":"article:tag","content":"Queue"}],["$","meta","17",{"property":"article:tag","content":"Heap"}],["$","meta","18",{"property":"article:tag","content":"LinkedList"}],["$","meta","19",{"name":"twitter:card","content":"summary"}],["$","meta","20",{"name":"twitter:title","content":"Java) Stack, Queue, Heap 활용하기"}],["$","meta","21",{"name":"twitter:description","content":"Stack, Queue, Heap"}]]
1:null
