{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    h2: \"h2\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Deep dive of day\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This is from Server Components!\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Deep dive of day\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"지금이거 작성되는거 맞을까?\"\n    }), \"\\n\", _jsx(_components.h1, {\n      children: \"Deep dive of day\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"This is from Server Components!\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{"title":"test","date":"2024.01.11"},"scope":{}}},"__N_SSG":true}